---
benchmark_type: lxd
categories:
  -
    name: Access, Authentication and Authorization
    sub_category:
      name: 5.3 Configure PAM
      audit_tests:
        -
          name: '5.3.1 Ensure password creation requirements are configured (Automated)'
          description: The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not
                        a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more.
                        The following are definitions of the pam_pwquality.so options.
                        The following options are set in the /etc/security/pwquality.conf file Password Length
                        minlen = 14 - password must be 14 characters or more Password complexity
                        minclass = 4 - The minimum number of required classes of characters for the new password (digits, uppercase, lowercase, others)
                        OR
                        dcredit = -1 - provide at least one digit
                        ucredit = -1 - provide at least one uppercase character
                        ocredit = -1 - provide at least one special character
                        lcredit = -1 - provide at least one lowercase character
                        The following is st in the /etc/pam.d/common-password file
                        retry=3 - Allow 3 tries before sending back a failure.
                        The settings shown above are one possible policy.
                        Alter these values to conform to your own organization's password policies.
          audit:
            - 'grep ''^\s*minlen\s*'' /etc/security/pwquality.conf 2> /dev/null'
            - 'grep ''^\s*minclass\s*'' /etc/security/pwquality.conf 2> /dev/null'
            - 'grep -E ''^\s*[duol]credit\s*'' /etc/security/pwquality.conf 2> /dev/null'
            - 'grep -E ''^\s*password\s+(requisite|required)\s+pam_pwquality\.so\s+(\S+\s+)*retry=[1-3]\s*(\s+\S+\s*)*(\s+#.*)?$'' /etc/pam.d/common-password |awk -F "pam_pwquality.so" ''{print $2}'' |awk ''FNR <= 1'''
          remedeation: 'Run the following command to install the pam_pwquality module:
                        apt install libpam-pwquality
                        Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy
                        minlen = 14
                        Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy
                        minclass = 4
                        OR
                        Edit the /etc/pam.d/common-password file to include the appropriate options for pam_pwquality.so and to conform to site policy:
                        password requisite pam_pwquality.so retry=3'
          check_type: multi_param
          additional_info: 'Additional module options may be set, recommendation requirements only cover including try_first_pass and minlen set to 14 or more.
                            Settings in /etc/security/pwquality.conf must use spaces around the = symbol.'
          eval_expr: "'$0' == 'minlen = 14'; && '$1' == 'minclass = 4'; && '$2' IN ('dcredit = -1','ucredit = -1','lcredit = -1','ocredit = -1'); && '$3' == 'retry=3';"
        -
          name: '5.3.2 Ensure lockout for failed password attempts is configured (Automated)'
          description: Lock out users after n unsuccessful consecutive login attempts. The first sets of changes are made to the PAM configuration files. The second set of changes are applied to the program specific PAM configuration file. The second set of changes must be applied to each program that will lock out users. Check the documentation for each secondary program for instructions on how to configure them to work with PAM.
                        deny=n - n represents the number of failed attempts before the account is locked
                        unlock_time=n - n represents the number of seconds before the account is unlocked
                        audit - Will log the user name into the system log if the user is not found.
                        silent - Don't print informative messages.
                        Set the lockout number and unlock time in accordance with local site policy.
          audit:
            - 'grep "pam_tally2" /etc/pam.d/common-auth 2> /dev/null'
            - 'grep -E "pam_(tally2|deny)\.so" /etc/pam.d/common-account |awk -F " " ''{print $3}'' 2> /dev/null'
          remedeation: 'Edit the /etc/pam.d/common-auth file and add the auth line below:
                        auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900 Edit
                         the /etc/pam.d/common-account file and add the account lines bellow:
                          account     requisite    pam_deny.so
                          account     required     pam_tally2.so
                          Note: If a user has been locked out because they have reached the maximum consecutive failure count defined
                          by deny= in the pam_tally2.so module, the user can be unlocked by issuing the command /sbin/pam_tally2 -u
                          <username> --reset. This command sets the failed count to 0, effectively unlocking the user.
'
          check_type: multi_param
          additional_info: 'BUG In pam_tally2.so
                            To work around this issue you have to add pam_tally2 to the account section account required pam_tally2.sofor
                            the counter to reset to 0 when using sudo
                            Use of the "audit" keyword may log credentials in the case of user error during authentication. This risk
                            should be evaluated in the context of the site policies of your organization.'
          eval_expr: "'$0' == 'auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900'; && '$1' IN ('pam_deny.so','pam_tally2.so');"
        -
          name: '5.3.3 Ensure password reuse is limited (Automated)'
          description: The /etc/security/opasswd file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.
          audit:
            - 'grep -E ''^password\s+required\s+pam_pwhistory.so'' /etc/pam.d/common- password 2> /dev/null'
          remedeation: 'Edit the /etc/pam.d/common-password file to include the remember option and conform to site policy as shown:
                        password required pam_pwhistory.so remember=5'
          check_type: multi_param
          additional_info: 'Additional module options may be set, recommendation only covers those listed here.'
          eval_expr: "'$0' == 'password required pam_pwhistory.so remember=5';"
        -
          name: '5.3.4 Ensure password hashing algorithm is SHA-512 (Automated)'
          description: The commands below change password encryption from md5 to sha512 (a much stronger hashing algorithm).
                      All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm.
          audit:
            - 'grep -E ''^\s*password\s+(\S+\s+)+pam_unix\.so\s+(\S+\s+)*sha512\s*(\S+\s*)*(\s+#.*)?$'' /etc/pam.d/common-password |grep sha512 2> /dev/null'
          remedeation: 'Edit the /etc/pam.d/common-password file to include the sha512 option for pam_unix.so as shown:
                        password [success=1 default=ignore] pam_unix.so sha512'
          check_type: multi_param
          additional_info: 'Consult your documentation for the appropriate PAM file and module.
                            Additional module options may be set, recommendation only covers those listed here.
                            If it is determined that the password algorithm being used is not SHA-512, once it is changed, it is recommended that all user ID''s
                            be immediately expired and forced to change their passwords on next login.
                            To accomplish that, the following commands can be used. Any system accounts that need to be expired should be
                            carefully done separately by the system administrator to prevent any potential problems.'
          eval_expr: "'$0' != '';"
